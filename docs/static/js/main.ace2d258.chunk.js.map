{"version":3,"sources":["components/AddCategory.js","helpers/getGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","preventDefault","categ","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGift","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACQ,sBAAMC,SAVO,SAACC,GAEdH,EAAWI,OAAOC,OAAS,IAC3BF,EAAEG,iBACFR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAM,SAAAC,GAEpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDf0BK,CAAa1B,GAAhCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACiBA,GADCA,EAAIC,aEZrCgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,2CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCZjC6B,IAASC,OACT,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.ace2d258.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            e.preventDefault();\r\n            setCategories(categ => [inputValue,...categ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type='text'\r\n                    value= {inputValue}\r\n                    onChange= { handleInputChange}\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGift = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=vfMkOQgVVSLu9kGHHxYlUQ4AW9pHnar8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    // console.log(url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGift } from '../hooks/useFetchGift'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data: images, loading} = useFetchGift(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>   \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n           \r\n            <div className=\"card-grid\">          \r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem key={img.id} \r\n                                        { ...img }\r\n                            />\r\n                        ))\r\n                    }             \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGift} from '../helpers/getGift';\r\n\r\nexport const useFetchGift = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        \r\n        getGift(category).then( imgs => {\r\n             \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })                \r\n                \r\n        })\r\n     },[category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai x', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpert</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />         \r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n// const divRoot = document.querySelector('#root');\nReactDOM.render(\n<GifExpertApp />,\n document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}